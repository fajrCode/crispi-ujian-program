@layout.app({ menu: title, sub })
@slot('main')

<div>
  <form>
    <div class="space-y-12">
      <div class="border-b border-gray-900/10 pb-12">
        <h2 class="text-lg font-semibold text-gray-900">Personal Information</h2>
        <p class="mt-1 text-sm text-gray-600">Use a permanent address where you can receive mail.</p>

        <div class="mt-5 grid grid-cols-1 gap-6 sm:grid-cols-6">
          <div class="sm:col-span-3">
            <label for="name-airline" class="block text-sm font-medium text-gray-900">Nama Kompetensi</label>
            <div class="mt-1">
              <input type="text" name="namaKompetensi" id="namaKompetensi" autocomplete="full-name"
                class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 outline-gray-300 placeholder-gray-400 focus:outline-indigo-600 focus:ring-2 focus:ring-indigo-600 sm:text-sm">
            </div>
          </div>
          <div class="sm:col-span-3">
            <label for="name-airline" class="block text-sm font-medium text-gray-900">Deskripsi</label>
            <div class="mt-1">
              <input type="text" name="deskripsi" id="deskripsi" autocomplete="full-name"
                class="block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline outline-1 outline-gray-300 placeholder-gray-400 focus:outline-indigo-600 focus:ring-2 focus:ring-indigo-600 sm:text-sm">
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="mt-6 flex items-center justify-end gap-6">
      <button type="button" class="text-sm font-semibold text-gray-900">Cancel</button>
      <button type="button" onclick="store()"
        class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus:outline focus:ring-2 focus:ring-indigo-600">
        Save
      </button>
    </div>
  </form>
</div>

<script>
  const store = async () => {
    let namaKompetensi = document.getElementById('namaKompetensi').value;
    let deskripsi = document.getElementById('deskripsi').value;

    try {
      let response = await fetch('/kompetensi/store', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ namaKompetensi, deskripsi }),
      });

      if (response.status == 200) {
        showToast('success', "Success", 'Data berhasil disimpan');
        setTimeout(() => {
          window.location.href = '/kompetensi';
        }, 1000);

      } else {
        const result = await response.json();
        showToast('error', "Error", result.message);

      }
      // Tampilkan pesan sukses
      showToast('success', "Success", "Data berhasil dibuat");
      setTimeout(() => {
        window.location.href = '/kompetensi';
      }, 1000);
    } catch (error) {
      showToast('error', "Error", "Terjadi kesalahan saat memperbarui data");
    }

  };

</script>

@endslot
@end